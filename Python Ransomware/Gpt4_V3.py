import os,glob,getpass,logging
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
from Crypto.Util.Padding import pad, unpad
from base64 import b64encode, b64decode
A=logging.basicConfig;B=glob.glob;C=os.path.join;D=AES.new;E=b64encode;F=b64decode;G=unpad;H=pad;I=get_random_bytes;J=getpass.getpass
def a():x=input("Enter the directories you want to work with separated by a comma (e.g., /home/user/documents,/home/user/downloads):").split(',');return x
def b(c,d):e=[];f=[".txt",".doc",".pdf",".jpg",".png"];[e.append(g)for h in d for g in B(C(h,f"**/*{i}"),recursive=True)for i in f];return e
def h(i,j,k=False):try:with open(i,"rb")as l:m=l.read();n=E(j.encrypt(H(m,AES.block_size)))if not k else G(j.decrypt(F(m)),AES.block_size);o=i[:-4]if k else i+".enc";with open(o,"wb")as p:p.write(n)except(PermissionError,FileNotFoundError)as q:logging.error(f"Error processing file {i}: {q}")
def k(r,s,t=False):[h(u,s,t)for u in r]
def l():m="swordf!sh";n=m.encode("utf-8");o=a();p=b([".txt",".doc",".pdf",".jpg",".png"],o);q=D(n,AES.MODE_CBC);k(p,q);print("Files have been encrypted. To decrypt, enter the correct password.");r=J("Enter your password to decrypt files:");s=b([".enc"],o);k(s,q,True)if r==m else print("Incorrect password. Files were not decrypted.")
if __name__=="__main__":l()
